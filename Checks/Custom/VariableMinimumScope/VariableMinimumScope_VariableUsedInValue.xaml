<Activity mc:Ignorable="sap sap2010 sads" x:Class="VariableMinimumScope_VariableUsedInValue"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Value" Type="InArgument(x:String)" />
    <x:Property Name="out_VariableIsUsed" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_VariableName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>VariableMinimumScope_VariableUsedInValue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Check if the given variable is used in the given text value.&#xD;&#xA;The text values where variables are used are enclosed in brackets [] in the workflow files. If there are no brackets, the text is just a string literal and the result will be false.&#xD;&#xA;&#xD;&#xA;Examples of usages for a variable named &quot;varName&quot; (the result should be true):&#xD;&#xA; - [varName]&#xD;&#xA; - [&quot;AAA&quot; + varName + &quot;BBB&quot;]&#xD;&#xA; - [&quot;AAA&quot; + varName]&#xD;&#xA; - [varName+&quot;BBB&quot;]&#xD;&#xA; - [String.Format(&quot;aaa{0}aaa&quot;;, varName)]&#xD;&#xA;&#xD;&#xA;Examples where the result shuld be false for a variable named &quot;varName&quot;:&#xD;&#xA; - varName&#xD;&#xA; - [varNam]&#xD;&#xA; - Here I'm mentioning varName but it's not a variable&#xD;&#xA; - [&quot;AAA varName&quot; + anotherVar + &quot;AAA varName&quot;]" DisplayName="VariableMinimumScope_VariableUsedInValue" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="CheckVariableUsageRegex" />
    </Sequence.Variables>
    <Assign sap2010:Annotation.AnnotationText="Regular expression to check if a given string can be found in a text used as a variable." DisplayName="Assign CheckVariableUsageRegex" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[CheckVariableUsageRegex]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[".*\W+" + in_VariableName + "\W+.*"]</InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:Annotation.AnnotationText="All values that contains variables are enclosed with brackets []&#xA;Also, we could have nodes that have attributes without value." Condition="[in_Value IsNot Nothing AndAlso in_Value.StartsWith(&quot;[&quot;)]" DisplayName="If starts with bracket" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="VariablesText" />
          </Sequence.Variables>
          <ui:Replace sap2010:Annotation.AnnotationText="Remove all string literals, text between quotes." sap2010:WorkflowViewState.IdRef="Replace_2" Input="[in_Value]" Pattern="[&quot;&quot;&quot;.*?&quot;&quot;&quot;]" RegexOption="IgnoreCase, Compiled" Replacement="[String.Empty]" Result="[VariablesText]" />
          <ui:IsMatch DisplayName="Is Match" sap2010:WorkflowViewState.IdRef="IsMatch_2" Input="[VariablesText]" Pattern="[CheckVariableUsageRegex]" RegexOption="IgnoreCase, Compiled" Result="[out_VariableIsUsed]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Assign DisplayName="Assign out_VariableIsUsed as False" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[out_VariableIsUsed]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d44BQzpcVXNlcnNcU2lsdml1XERlc2t0b3BcVG95b3RhXFdvcmtmbG93LUluc3BlY3RvclxDaGVja0Jlc3RQcmFjdGljZXNcQ2hlY2tzXFZhcmlhYmxlTWluaW11bVNjb3BlXFZhcmlhYmxlTWluaW11bVNjb3BlX1ZhcmlhYmxlVXNlZEluVmFsdWUueGFtbBNGA2gOAgEBSgVRDgIBGVIFZgoCAQJPME9VAgEcTDFMSgIBGlK6AVL/AQIBA1QJWhQCAQpdCWQSAgEGWAtYugICARJZC1nZAQIBC2I1YjoCAQlfNl9KAgEHWJ4BWKoBAgEXWI4CWJ4CAgEWWKYCWLcCAgEUWLMBWN4BAgETWWBZcQIBEFnAAVnWAQIBDll6WZUBAgEM</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="489,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Replace_2" sap:VirtualizedContainerService.HintSize="200,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsMatch_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="222,250">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="489,440">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="511,973">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="VariableMinimumScope_VariableUsedInValue_1" sap:VirtualizedContainerService.HintSize="551,1053" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>