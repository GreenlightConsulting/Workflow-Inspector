<Activity mc:Ignorable="sap sap2010 sads" x:Class="VariableUsedInScope"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Node" Type="InArgument(sx:XmlNode)" />
    <x:Property Name="in_VariableName" Type="InArgument(x:String)" />
    <x:Property Name="out_UsageFound" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>VariableUsedInScope_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.XPath</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Check if the given variable is used in the scope of the given node, either directly in one of the child activities or in more that one sub-containers on different branches whos minim parent node is the given root node. &#xA;If the variable is used in an activity that is inside another container, it should be defined in that container, hence the result will be false. But, if it used in more that one containers, then it should be defined in the common parent container. If that common parent continer is the given node, the result is true, otherwise false.&#xA;&quot;Container&quot; means any of the activities were variables can be defined: Sequence, Flowchart, StateMachine.&#xA;&#xA;Arguments:&#xA; - in_Node, XmlNode - the root node container where the variable should be used.&#xA; - in_VariableName, String - the name of the variable to check if it's used.&#xA; - out_UsageFound, Boolean - the result." DisplayName="VariableUsedInScope" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="CheckVariableUsageRegex" />
      <Variable x:TypeArguments="sx:XmlNodeList" Name="NodesWithValue" />
      <Variable x:TypeArguments="scg:List(sx:XmlNode)" Name="NodesUsingVariable" />
      <Variable x:TypeArguments="sx:XmlNodeList" Name="NodesWithAttributes" />
      <Variable x:TypeArguments="sx:XmlNode" Name="FirstUsageContainer" />
      <Variable x:TypeArguments="sx:XmlNode" Name="CurrentUsageContainer" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Index variable to loop through elements in the NodesWithValue array." Default="0" Name="Index" />
      <Variable x:TypeArguments="x:Int32" Name="UsagesCount" />
    </Sequence.Variables>
    <Assign sap2010:Annotation.AnnotationText="Select all nodes that have values, except for Reference and DebugSymbol.Symbol." DisplayName="Assign NodesWithValue" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="sx:XmlNodeList">[NodesWithValue]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sx:XmlNodeList">[in_Node.SelectNodes(".//*[not(local-name()='Reference') and not(local-name()='DebugSymbol.Symbol') and (string-length(text()) &gt; 0)]")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Select all nodes that have attributes, other than some specific attributes that is safe to ignore, like DisplayName." DisplayName="Assign NodesWithAttributes" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="sx:XmlNodeList">[NodesWithAttributes]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sx:XmlNodeList">[in_Node.SelectNodes(".//*[@*[not(name()='DisplayName') and not(name()='sap2010:Annotation.AnnotationText') and not(name()='x:TypeArguments') and not(name()='sap2010:WorkflowViewState.IdRef')]]")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Initializa the list of all nodes where the variable is used." DisplayName="Assign NodesUsingVariable" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(sx:XmlNode)">[NodesUsingVariable]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(sx:XmlNode)">[new List(of XmlNode)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="sx:XmlNode" sap2010:Annotation.AnnotationText="Node with a value (values only, not attributes)" DisplayName="For Each NodesWithValue" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[NodesWithValue]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sx:XmlNode">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="node" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="VariableIsUsed" />
            </Sequence.Variables>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Check if the variable is used in the given text." DisplayName="Invoke VariableMinimumScope_VariableUsedInValue workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Checks\VariableMinimumScope\VariableMinimumScope_VariableUsedInValue.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Value">[node.InnerText]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_VariableIsUsed">[VariableIsUsed]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_VariableName">[in_VariableName]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <If Condition="[VariableIsUsed]" DisplayName="If Variable is used" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <InvokeMethod sap2010:Annotation.AnnotationText="Add node to list." DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                  <InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="scg:List(sx:XmlNode)">[NodesUsingVariable]</InArgument>
                  </InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sx:XmlNode">[node]</InArgument>
                </InvokeMethod>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:ForEach x:TypeArguments="sx:XmlNode" sap2010:Annotation.AnnotationText="Nodes with attributes" DisplayName="For Each NodesWithAttributes" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[NodesWithAttributes]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sx:XmlNode">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="node" />
          </ActivityAction.Argument>
          <ui:ForEach x:TypeArguments="sx:XmlAttribute" sap2010:Annotation.AnnotationText="Check if the variable is used in any of the node's attributes." DisplayName="For Each attribute" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[node.Attributes]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sx:XmlAttribute">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sx:XmlAttribute" Name="attribute" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="VariablesText" />
                    <Variable x:TypeArguments="x:Boolean" Name="VariableIsUsed" />
                  </Sequence.Variables>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Check if the variable is used in the given text." DisplayName="Invoke VariableMinimumScope_VariableUsedInValue workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Checks\VariableMinimumScope\VariableMinimumScope_VariableUsedInValue.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Value">[attribute.Value]</InArgument>
                      <OutArgument x:TypeArguments="x:Boolean" x:Key="out_VariableIsUsed">[VariableIsUsed]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_VariableName">[in_VariableName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <If Condition="[VariableIsUsed]" DisplayName="If Variable is used" sap2010:WorkflowViewState.IdRef="If_16">
                    <If.Then>
                      <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <InvokeMethod sap2010:Annotation.AnnotationText="Add node to list." DisplayName="Invoke Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Add">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="scg:List(sx:XmlNode)">[NodesUsingVariable]</InArgument>
                          </InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="sx:XmlNode">[node]</InArgument>
                        </InvokeMethod>
                        <ui:Break sap2010:Annotation.AnnotationText="We added the current node in the list, we can skip checking the remaining attributes for current node." sap2010:WorkflowViewState.IdRef="Break_3" />
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <Assign DisplayName="Assign out_UsageFound as False" sap2010:WorkflowViewState.IdRef="Assign_13">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[out_UsageFound]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="The number of nodes where the variable is used." DisplayName="Assign UsagesCount" sap2010:WorkflowViewState.IdRef="Assign_11">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[UsagesCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[NodesUsingVariable.Count]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_19">
          <Flowchart sap2010:Annotation.AnnotationText="Check first for the first node, and then for all other nodes. We need to get the first container (for the first node) to be able to compare with containers for other nodes to check if used in more than one container.&#xA;&#xA;We stop when:&#xA; - Correct usage was found&#xA; - No more nodes to process" DisplayName="Check if the variable is defined in the right scope" sap2010:WorkflowViewState.IdRef="Flowchart_1">
            <Flowchart.StartNode>
              <FlowDecision x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="The variable is used in at least one node. If not, there is nothing else to check, the result is false." Condition="[UsagesCount &gt; 0]" DisplayName="Any usage?" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get the top container for the first node where the variable is used." DisplayName="Invoke VariableScope_GetTopContainer workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="CheckBestPractices\Checks\VariableMinimumScope\VariableMinimumScope_GetTopContainer.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sx:XmlNode" x:Key="in_StartNode">[NodesUsingVariable(0)]</InArgument>
                        <InArgument x:TypeArguments="sx:XmlNode" x:Key="in_RootNode">[in_Node]</InArgument>
                        <OutArgument x:TypeArguments="sx:XmlNode" x:Key="out_ContainerNode">[FirstUsageContainer]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <FlowStep.Next>
                      <FlowDecision x:Name="__ReferenceID4" sap2010:Annotation.AnnotationText="FirstUsageContainer is Nothing (meaning that the variable is used directly in the root node (in_Node)" Condition="[FirstUsageContainer Is Nothing]" DisplayName="First usage is in root" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                            <Assign sap2010:Annotation.AnnotationText="Variable is used! Assign output value and return." DisplayName="Assign out_UsageFount to True" sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[out_UsageFound]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="Check for all other nodes if the parent container is the root node or different than first one." />
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                                <Assign sap2010:Annotation.AnnotationText="Start from second usage. The first one was processed above." DisplayName="Assign Index" sap2010:WorkflowViewState.IdRef="Assign_7">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[Index]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <FlowStep.Next>
                                  <FlowDecision x:Name="__ReferenceID1" Condition="[Index &lt; NodesUsingVariable.Count]" DisplayName="More nodes to check" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                    <FlowDecision.True>
                                      <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get the top container for the first node where the variable is used." DisplayName="Invoke VariableScope_GetTopContainer workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="CheckBestPractices\Checks\VariableMinimumScope\VariableMinimumScope_GetTopContainer.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="sx:XmlNode" x:Key="in_StartNode">[NodesUsingVariable(Index)]</InArgument>
                                            <InArgument x:TypeArguments="sx:XmlNode" x:Key="in_RootNode">[in_Node]</InArgument>
                                            <OutArgument x:TypeArguments="sx:XmlNode" x:Key="out_ContainerNode">[CurrentUsageContainer]</OutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <FlowStep.Next>
                                          <FlowDecision x:Name="__ReferenceID7" sap2010:Annotation.AnnotationText="Usage found in root (CurrentUsageContainer is Nothing) or used in different container (CurrentUsageContainer is not FirstUsageContainer)" Condition="[CurrentUsageContainer Is Nothing OrElse CurrentUsageContainer IsNot FirstUsageContainer]" DisplayName="Usage found" sap2010:WorkflowViewState.IdRef="FlowDecision_3" True="{x:Reference __ReferenceID0}">
                                            <FlowDecision.False>
                                              <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                                                <Assign DisplayName="Assign Index increment" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[Index]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[1 + Index]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <FlowStep.Next>
                                                  <x:Reference>__ReferenceID1</x:Reference>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowDecision.False>
                                          </FlowDecision>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowDecision.True>
                                  </FlowDecision>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
              </FlowDecision>
            </Flowchart.StartNode>
            <x:Reference>__ReferenceID2</x:Reference>
            <x:Reference>__ReferenceID3</x:Reference>
            <x:Reference>__ReferenceID4</x:Reference>
            <x:Reference>__ReferenceID0</x:Reference>
            <x:Reference>__ReferenceID5</x:Reference>
            <x:Reference>__ReferenceID1</x:Reference>
            <x:Reference>__ReferenceID6</x:Reference>
            <x:Reference>__ReferenceID7</x:Reference>
            <x:Reference>__ReferenceID8</x:Reference>
            <x:Reference>__ReferenceID9</x:Reference>
          </Flowchart>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <Flowchart sap2010:Annotation.AnnotationText="We need to get the first container (for the first node) to be able to compare with containers for other nodes to check if used in more than one container.&#xA;&#xA;We stop when:&#xA; - Correct usage was found&#xA; - No more nodes to process" DisplayName="Check if the variable is defined in the right scope" sap2010:WorkflowViewState.IdRef="Flowchart_2">
      <Flowchart.StartNode>
        <FlowDecision x:Name="__ReferenceID10" Condition="[Index &lt; NodesUsingVariable.Count]" DisplayName="More nodes to check" sap2010:WorkflowViewState.IdRef="FlowDecision_7">
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_11">
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get the top container for the first node where the variable is used." DisplayName="Invoke VariableScope_GetTopContainer workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Checks\VariableMinimumScope\VariableMinimumScope_GetTopContainer.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="sx:XmlNode" x:Key="in_StartNode">[NodesUsingVariable(Index)]</InArgument>
                  <InArgument x:TypeArguments="sx:XmlNode" x:Key="in_RootNode">[in_Node]</InArgument>
                  <OutArgument x:TypeArguments="sx:XmlNode" x:Key="out_ContainerNode">[CurrentUsageContainer]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID15" sap2010:Annotation.AnnotationText="Save the container where the variable is first used." Condition="[FirstUsageContainer Is Nothing]" DisplayName="FirstUsage is Nothing" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                      <Assign DisplayName="Assign First Usage Container" sap2010:WorkflowViewState.IdRef="Assign_16">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sx:XmlNode">[FirstUsageContainer]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sx:XmlNode">[CurrentUsageContainer]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <FlowStep.Next>
                        <FlowDecision x:Name="__ReferenceID11" sap2010:Annotation.AnnotationText="Usage found in root (CurrentUsageContainer is Nothing) or used in different container (CurrentUsageContainer is not FirstUsageContainer)" Condition="[CurrentUsageContainer Is Nothing OrElse CurrentUsageContainer IsNot FirstUsageContainer]" DisplayName="Usage found" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                          <FlowDecision.True>
                            <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                              <Assign sap2010:Annotation.AnnotationText="Variable is used! Assign output value and return." DisplayName="Assign out_UsageFount to True" sap2010:WorkflowViewState.IdRef="Assign_17">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[out_UsageFound]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                </Assign.Value>
                              </Assign>
                            </FlowStep>
                          </FlowDecision.True>
                          <FlowDecision.False>
                            <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                              <Assign DisplayName="Assign Index increment" sap2010:WorkflowViewState.IdRef="Assign_18">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[Index]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[1 + Index]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <FlowStep.Next>
                                <x:Reference>__ReferenceID10</x:Reference>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowDecision.False>
                        </FlowDecision>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <x:Reference>__ReferenceID11</x:Reference>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
        </FlowDecision>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID12</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID13</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
      <x:Reference>__ReferenceID14</x:Reference>
      <x:Reference>__ReferenceID15</x:Reference>
      <x:Reference>__ReferenceID16</x:Reference>
    </Flowchart>
    <sads:DebugSymbol.Symbol>d4IBQzpcVXNlcnNcTWF0ZXVzIENydXpcRG9jdW1lbnRzXEdpdEh1YlxXb3JrZmxvdy1JbnNwZWN0b3JcQ2hlY2tzXFZhcmlhYmxlTWluaW11bVNjb3BlXFZhcmlhYmxlTWluaW11bVNjb3BlX1ZhcmlhYmxlVXNlZEluU2NvcGUueGFtbEJNA/oCDgIBAVWcAVWfAQIBAlgFXw4CAVVgBWcOAgFQaAVvDgIBTXAFjgESAgE8jwEFugESAgEnuwEFwgEOAgEjwwEFygEOAgEfywEFrgIVAgEerwIF+AIRAgEDXTZdwAECAVhaN1pHAgFWZTZl+gECAVNiN2JMAgFRbTxtUgIBT2o9alECAU5w3QFw7wECAUx2C4sBFgIBPY8ByAGPAd8BAgE7lQELtwEYAgEowAExwAE2AgEmvQEyvQFCAgEkyAEvyAFJAgEixQEwxQE9AgEgsQI6sQJhAgEdtAIPugInAgEUvAKbAbwCvQECARPIAvcByALSAgIBEtcCH94CKAIBDcsCH9ICKAIBCb8CF8YCIAIBBHoNgAElAgFFgQENigESAgE+lQHyAZUBhQICATqbARG0ARwCASm2AlG2AmwCARq4Ale4Am4CARi3AlC3AlkCARa0Ar0CtAKEAwIBFdwCSdwCVAIBENkCStkCUQIBDtACS9ACTwIBDM0CTM0CXAIBCsQCRMQCWwIBB8ECRcECWgIBBXxJfFkCAUt+UH5hAgFJerICev0CAgFIfVV9ZQIBRoEBG4EBLQIBP4MBEYgBIAIBQaABE6YBKwIBM6cBE7MBGAIBKoUBSIUBXAIBRIcBPIcBQgIBQqIBT6IBYAIBOaQBVqQBZwIBN6ABuAKgAYMDAgE2owFbowFrAgE0pwEhpwEzAgErqQEXsQEiAgEtqgEZrwEoAgEvsAEZsAHaAQIBLqwBUKwBZAIBMq4BRK4BSgIBMA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="695,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="695,132">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="695,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="464,114">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="217,159">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,307" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="486,585">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="695,746">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="464,114">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="217,159">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Break_3" sap:VirtualizedContainerService.HintSize="217,94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="239,417">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="464,565" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="486,843">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="502,1004">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="695,1165">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="695,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="695,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">19,1159</av:Point>
            <av:Size x:Key="ShapeSize">242,102</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="314,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">549,900</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">670,900 670,753.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="160,204">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">340,948</av:Point>
            <av:Size x:Key="ShapeSize">160,204</av:Size>
            <av:PointCollection x:Key="TrueConnector">340,1050 140,1050 140,1159</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">500,1050 670,1050 670,960</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">320,786</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">420,894 420,948</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_4" sap:VirtualizedContainerService.HintSize="117,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">611.5,666.5</av:Point>
            <av:Size x:Key="ShapeSize">117,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">611.5,710 420,710 420,786</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">549,499</av:Point>
            <av:Size x:Key="ShapeSize">242,102</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">670,601 670,666.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">513,372</av:Point>
            <av:Size x:Key="ShapeSize">314,93</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">670,465 670,499</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="159,174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">290.5,393</av:Point>
            <av:Size x:Key="ShapeSize">159,174</av:Size>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <av:PointCollection x:Key="TrueConnector">290.5,480 140,480 140,1159</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">449.5,480 479.5,480 479.5,342 670,342 670,372</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,306</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">250,360 370,360 370,393</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="158,174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">291,133</av:Point>
            <av:Size x:Key="ShapeSize">158,174</av:Size>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <av:PointCollection x:Key="TrueConnector">291,220 150,220 150,306</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="200,243">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">340,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">370,77.5 370,133</av:PointCollection>
            <x:Double x:Key="Width">849</x:Double>
            <x:Double x:Key="Height">1272</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="222,367">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="695,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="314,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">79,729</av:Point>
            <av:Size x:Key="ShapeSize">242,102</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">439,220</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">560,220 560,97.5 349.25,97.5 349.25,127.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_5" sap:VirtualizedContainerService.HintSize="158,204">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">380,518</av:Point>
            <av:Size x:Key="ShapeSize">158,204</av:Size>
            <av:PointCollection x:Key="TrueConnector">380,620 350,620 350,699 200,699 200,729</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">538,620 560,620 560,280</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:String x:Key="TrueLabel">Yes</x:String>
            <x:String x:Key="FalseLabel">No</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">38.895,570</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">280.895,600 310.895,600 310.895,488 420,488 420,518</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_6" sap:VirtualizedContainerService.HintSize="149,144">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">45.5,374</av:Point>
            <av:Size x:Key="ShapeSize">149,144</av:Size>
            <av:PointCollection x:Key="TrueConnector">45.5,446 15.5,446 15.5,600 38.895,600</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">194.5,446 460,446 460,518</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:String x:Key="TrueLabel">Yes</x:String>
            <x:String x:Key="FalseLabel">No</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,216</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">120,324 120,374</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_7" sap:VirtualizedContainerService.HintSize="117,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">261.5,127.5</av:Point>
            <av:Size x:Key="ShapeSize">117,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">261.5,171 120,171 120,216</av:PointCollection>
            <x:String x:Key="TrueLabel">Yes</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_2" sap:VirtualizedContainerService.HintSize="695,971">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">290,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">320,77.5 320,127.5</av:PointCollection>
            <x:Double x:Key="Width">681</x:Double>
            <x:Double x:Key="Height">833.232</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="717,4067">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="VariableUsedInScope_1" sap:VirtualizedContainerService.HintSize="757,4147" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>